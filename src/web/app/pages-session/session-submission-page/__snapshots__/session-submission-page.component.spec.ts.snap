// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SessionSubmissionPageComponent should snap when feedback session questions have failed to load 1`] = `
<tm-session-submission-page
  FeedbackSessionSubmissionStatus={[Function Object]}
  Intent={[Function Object]}
  authService={[Function AuthService]}
  backendUrl={[Function String]}
  commentService={[Function FeedbackResponseCommentService]}
  courseId={[Function String]}
  document={[Function Document]}
  feedbackQuestionsService={[Function FeedbackQuestionsService]}
  feedbackResponsesService={[Function FeedbackResponsesService]}
  feedbackSessionInstructions=""
  feedbackSessionName={[Function String]}
  feedbackSessionSubmissionStatus={[Function String]}
  feedbackSessionTimezone=""
  feedbackSessionsService={[Function FeedbackSessionsService]}
  formattedSessionClosingTime=""
  formattedSessionOpeningTime=""
  hasFeedbackSessionQuestionsLoadingFailed={[Function Boolean]}
  instructorService={[Function InstructorService]}
  intent={[Function String]}
  isFeedbackSessionLoading={[Function Boolean]}
  isFeedbackSessionQuestionResponsesLoading={[Function Boolean]}
  isFeedbackSessionQuestionsLoading={[Function Boolean]}
  isModerationHintExpanded="false"
  isSavingResponses="false"
  isSubmissionFormsDisabled="false"
  loggedInUser=""
  moderatedPerson=""
  moderatedQuestionId=""
  navigationService={[Function NavigationService]}
  ngbModal={[Function NgbModal]}
  pageScrollService={[Function PageScrollService]}
  personEmail=""
  personName=""
  previewAsPerson=""
  questionSubmissionForms={[Function Array]}
  regKey={[Function String]}
  retryAttempts="0"
  route={[Function Object]}
  router={[Function Router]}
  simpleModalService={[Function SimpleModalService]}
  statusMessageService={[Function StatusMessageService]}
  studentService={[Function StudentService]}
  timezoneService={[Function TimezoneService]}
>
  <div
    class="row"
  >
    <div
      class="col-12"
    >
      <div
        class="alert alert-primary"
        role="alert"
      >
        
        
        <div>
           You are submitting feedback as 
          <mark>
            <b>
              
            </b>
          </mark>
          . You may submit feedback for sessions that are currently open and view results without logging in. To access other features you need to 
          <a
            href="#"
          >
            login using a Google account
          </a>
           (optional). 
        </div>
      </div>
    </div>
  </div><div
    class="row"
  >
    <div
      class="col-12"
    >
      <div
        class="alert alert-primary"
        role="alert"
      >
        <i
          class="fas fa-exclamation-circle"
        />
         Note that you can use the Submit button to save responses already entered, and continue to answer remaining questions after that. You may also edit your submission any number of times before the closing time of this session. 
      </div>
    </div>
  </div><tm-loading-spinner>
    <div
      class="loading-container"
    >
      <div
        class="row spinner-border text-primary"
        role="status"
      />
      <div
        class="row text-secondary"
      >
        Loading...
      </div>
    </div>
  </tm-loading-spinner><tm-loading-retry>
    
    <div
      class="text-center"
    >
      <p
        class="text-muted m-1"
      >
        Failed to load questions
      </p>
      <button
        class="btn btn-primary"
      >
        <i
          aria-hidden="true"
          class="fas fa-redo"
        />
        Â Retry
      </button>
    </div>
    
  </tm-loading-retry>
</tm-session-submission-page>
`;

exports[`SessionSubmissionPageComponent should snap when saving responses 1`] = `
<tm-session-submission-page
  FeedbackSessionSubmissionStatus={[Function Object]}
  Intent={[Function Object]}
  authService={[Function AuthService]}
  backendUrl={[Function String]}
  commentService={[Function FeedbackResponseCommentService]}
  courseId={[Function String]}
  document={[Function Document]}
  feedbackQuestionsService={[Function FeedbackQuestionsService]}
  feedbackResponsesService={[Function FeedbackResponsesService]}
  feedbackSessionInstructions=""
  feedbackSessionName={[Function String]}
  feedbackSessionSubmissionStatus={[Function String]}
  feedbackSessionTimezone=""
  feedbackSessionsService={[Function FeedbackSessionsService]}
  formattedSessionClosingTime=""
  formattedSessionOpeningTime=""
  hasFeedbackSessionQuestionsLoadingFailed="false"
  instructorService={[Function InstructorService]}
  intent={[Function String]}
  isFeedbackSessionLoading={[Function Boolean]}
  isFeedbackSessionQuestionResponsesLoading={[Function Boolean]}
  isFeedbackSessionQuestionsLoading={[Function Boolean]}
  isModerationHintExpanded="false"
  isSavingResponses={[Function Boolean]}
  isSubmissionFormsDisabled="false"
  loggedInUser=""
  moderatedPerson=""
  moderatedQuestionId=""
  navigationService={[Function NavigationService]}
  ngbModal={[Function NgbModal]}
  pageScrollService={[Function PageScrollService]}
  personEmail=""
  personName=""
  previewAsPerson=""
  questionSubmissionForms={[Function Array]}
  regKey={[Function String]}
  retryAttempts={[Function Number]}
  route={[Function Object]}
  router={[Function Router]}
  simpleModalService={[Function SimpleModalService]}
  statusMessageService={[Function StatusMessageService]}
  studentService={[Function StudentService]}
  timezoneService={[Function TimezoneService]}
>
  <div
    class="row"
  >
    <div
      class="col-12"
    >
      <div
        class="alert alert-primary"
        role="alert"
      >
        
        
        <div>
           You are submitting feedback as 
          <mark>
            <b>
              
            </b>
          </mark>
          . You may submit feedback for sessions that are currently open and view results without logging in. To access other features you need to 
          <a
            href="#"
          >
            login using a Google account
          </a>
           (optional). 
        </div>
      </div>
    </div>
  </div><div
    class="row"
  >
    <div
      class="col-12"
    >
      <div
        class="alert alert-primary"
        role="alert"
      >
        <i
          class="fas fa-exclamation-circle"
        />
         Note that you can use the Submit button to save responses already entered, and continue to answer remaining questions after that. You may also edit your submission any number of times before the closing time of this session. 
      </div>
    </div>
  </div><tm-loading-spinner>
    <div
      class="loading-container"
    >
      <div
        class="row spinner-border text-primary"
        role="status"
      />
      <div
        class="row text-secondary"
      >
        Loading...
      </div>
    </div>
  </tm-loading-spinner><tm-loading-retry>
    
    
    <tm-loading-spinner>
      <div
        class="loading-container"
      >
        <div
          class="row spinner-border text-primary"
          role="status"
        />
        <div
          class="row text-secondary"
        >
          Loading...
        </div>
      </div>
    </tm-loading-spinner>
    
    
  </tm-loading-retry>
</tm-session-submission-page>
`;

exports[`SessionSubmissionPageComponent should snap with default fields 1`] = `
<tm-session-submission-page
  FeedbackSessionSubmissionStatus={[Function Object]}
  Intent={[Function Object]}
  authService={[Function AuthService]}
  backendUrl={[Function String]}
  commentService={[Function FeedbackResponseCommentService]}
  courseId={[Function String]}
  document={[Function Document]}
  feedbackQuestionsService={[Function FeedbackQuestionsService]}
  feedbackResponsesService={[Function FeedbackResponsesService]}
  feedbackSessionInstructions=""
  feedbackSessionName={[Function String]}
  feedbackSessionSubmissionStatus={[Function String]}
  feedbackSessionTimezone=""
  feedbackSessionsService={[Function FeedbackSessionsService]}
  formattedSessionClosingTime=""
  formattedSessionOpeningTime=""
  hasFeedbackSessionQuestionsLoadingFailed="false"
  instructorService={[Function InstructorService]}
  intent={[Function String]}
  isFeedbackSessionLoading={[Function Boolean]}
  isFeedbackSessionQuestionResponsesLoading={[Function Boolean]}
  isFeedbackSessionQuestionsLoading={[Function Boolean]}
  isModerationHintExpanded="false"
  isSavingResponses="false"
  isSubmissionFormsDisabled="false"
  loggedInUser=""
  moderatedPerson=""
  moderatedQuestionId=""
  navigationService={[Function NavigationService]}
  ngbModal={[Function NgbModal]}
  pageScrollService={[Function PageScrollService]}
  personEmail=""
  personName=""
  previewAsPerson=""
  questionSubmissionForms={[Function Array]}
  regKey={[Function String]}
  retryAttempts={[Function Number]}
  route={[Function Object]}
  router={[Function Router]}
  simpleModalService={[Function SimpleModalService]}
  statusMessageService={[Function StatusMessageService]}
  studentService={[Function StudentService]}
  timezoneService={[Function TimezoneService]}
>
  <div
    class="row"
  >
    <div
      class="col-12"
    >
      <div
        class="alert alert-primary"
        role="alert"
      >
        
        
        <div>
           You are submitting feedback as 
          <mark>
            <b>
              
            </b>
          </mark>
          . You may submit feedback for sessions that are currently open and view results without logging in. To access other features you need to 
          <a
            href="#"
          >
            login using a Google account
          </a>
           (optional). 
        </div>
      </div>
    </div>
  </div><div
    class="row"
  >
    <div
      class="col-12"
    >
      <div
        class="alert alert-primary"
        role="alert"
      >
        <i
          class="fas fa-exclamation-circle"
        />
         Note that you can use the Submit button to save responses already entered, and continue to answer remaining questions after that. You may also edit your submission any number of times before the closing time of this session. 
      </div>
    </div>
  </div><tm-loading-spinner>
    <div
      class="loading-container"
    >
      <div
        class="row spinner-border text-primary"
        role="status"
      />
      <div
        class="row text-secondary"
      >
        Loading...
      </div>
    </div>
  </tm-loading-spinner><tm-loading-retry>
    
    
    <tm-loading-spinner>
      <div
        class="loading-container"
      >
        <div
          class="row spinner-border text-primary"
          role="status"
        />
        <div
          class="row text-secondary"
        >
          Loading...
        </div>
      </div>
    </tm-loading-spinner>
    
    
  </tm-loading-retry>
</tm-session-submission-page>
`;

exports[`SessionSubmissionPageComponent should snap with feedback session question submission forms 1`] = `
<tm-session-submission-page
  FeedbackSessionSubmissionStatus={[Function Object]}
  Intent={[Function Object]}
  authService={[Function AuthService]}
  backendUrl={[Function String]}
  commentService={[Function FeedbackResponseCommentService]}
  courseId={[Function String]}
  document={[Function Document]}
  feedbackQuestionsService={[Function FeedbackQuestionsService]}
  feedbackResponsesService={[Function FeedbackResponsesService]}
  feedbackSessionInstructions=""
  feedbackSessionName={[Function String]}
  feedbackSessionSubmissionStatus={[Function String]}
  feedbackSessionTimezone=""
  feedbackSessionsService={[Function FeedbackSessionsService]}
  formattedSessionClosingTime=""
  formattedSessionOpeningTime=""
  hasFeedbackSessionQuestionsLoadingFailed="false"
  instructorService={[Function InstructorService]}
  intent={[Function String]}
  isFeedbackSessionLoading={[Function Boolean]}
  isFeedbackSessionQuestionResponsesLoading={[Function Boolean]}
  isFeedbackSessionQuestionsLoading={[Function Boolean]}
  isModerationHintExpanded="false"
  isSavingResponses="false"
  isSubmissionFormsDisabled="false"
  loggedInUser=""
  moderatedPerson=""
  moderatedQuestionId=""
  navigationService={[Function NavigationService]}
  ngbModal={[Function NgbModal]}
  pageScrollService={[Function PageScrollService]}
  personEmail=""
  personName=""
  previewAsPerson=""
  questionSubmissionForms={[Function Array]}
  regKey={[Function String]}
  retryAttempts={[Function Number]}
  route={[Function Object]}
  router={[Function Router]}
  simpleModalService={[Function SimpleModalService]}
  statusMessageService={[Function StatusMessageService]}
  studentService={[Function StudentService]}
  timezoneService={[Function TimezoneService]}
>
  <div
    class="row"
  >
    <div
      class="col-12"
    >
      <div
        class="alert alert-primary"
        role="alert"
      >
        
        
        <div>
           You are submitting feedback as 
          <mark>
            <b>
              
            </b>
          </mark>
          . You may submit feedback for sessions that are currently open and view results without logging in. To access other features you need to 
          <a
            href="#"
          >
            login using a Google account
          </a>
           (optional). 
        </div>
      </div>
    </div>
  </div><div
    class="row"
  >
    <div
      class="col-12"
    >
      <div
        class="alert alert-primary"
        role="alert"
      >
        <i
          class="fas fa-exclamation-circle"
        />
         Note that you can use the Submit button to save responses already entered, and continue to answer remaining questions after that. You may also edit your submission any number of times before the closing time of this session. 
      </div>
    </div>
  </div><tm-loading-spinner>
    <div
      class="loading-container"
    >
      <div
        class="row spinner-border text-primary"
        role="status"
      />
      <div
        class="row text-secondary"
      >
        Loading...
      </div>
    </div>
  </tm-loading-spinner><tm-loading-retry>
    
    
    <tm-loading-spinner>
      <div
        class="loading-container"
      >
        <div
          class="row spinner-border text-primary"
          role="status"
        />
        <div
          class="row text-secondary"
        >
          Loading...
        </div>
      </div>
    </tm-loading-spinner>
    
    
  </tm-loading-retry>
</tm-session-submission-page>
`;

exports[`SessionSubmissionPageComponent should snap with feedback session question submission forms when disabled 1`] = `
<tm-session-submission-page
  FeedbackSessionSubmissionStatus={[Function Object]}
  Intent={[Function Object]}
  authService={[Function AuthService]}
  backendUrl={[Function String]}
  commentService={[Function FeedbackResponseCommentService]}
  courseId={[Function String]}
  document={[Function Document]}
  feedbackQuestionsService={[Function FeedbackQuestionsService]}
  feedbackResponsesService={[Function FeedbackResponsesService]}
  feedbackSessionInstructions=""
  feedbackSessionName={[Function String]}
  feedbackSessionSubmissionStatus={[Function String]}
  feedbackSessionTimezone=""
  feedbackSessionsService={[Function FeedbackSessionsService]}
  formattedSessionClosingTime=""
  formattedSessionOpeningTime=""
  hasFeedbackSessionQuestionsLoadingFailed="false"
  instructorService={[Function InstructorService]}
  intent={[Function String]}
  isFeedbackSessionLoading={[Function Boolean]}
  isFeedbackSessionQuestionResponsesLoading={[Function Boolean]}
  isFeedbackSessionQuestionsLoading={[Function Boolean]}
  isModerationHintExpanded="false"
  isSavingResponses="false"
  isSubmissionFormsDisabled={[Function Boolean]}
  loggedInUser=""
  moderatedPerson=""
  moderatedQuestionId=""
  navigationService={[Function NavigationService]}
  ngbModal={[Function NgbModal]}
  pageScrollService={[Function PageScrollService]}
  personEmail=""
  personName=""
  previewAsPerson=""
  questionSubmissionForms={[Function Array]}
  regKey={[Function String]}
  retryAttempts={[Function Number]}
  route={[Function Object]}
  router={[Function Router]}
  simpleModalService={[Function SimpleModalService]}
  statusMessageService={[Function StatusMessageService]}
  studentService={[Function StudentService]}
  timezoneService={[Function TimezoneService]}
>
  <div
    class="row"
  >
    <div
      class="col-12"
    >
      <div
        class="alert alert-primary"
        role="alert"
      >
        
        
        <div>
           You are submitting feedback as 
          <mark>
            <b>
              
            </b>
          </mark>
          . You may submit feedback for sessions that are currently open and view results without logging in. To access other features you need to 
          <a
            href="#"
          >
            login using a Google account
          </a>
           (optional). 
        </div>
      </div>
    </div>
  </div><div
    class="row"
  >
    <div
      class="col-12"
    >
      <div
        class="alert alert-primary"
        role="alert"
      >
        <i
          class="fas fa-exclamation-circle"
        />
         Note that you can use the Submit button to save responses already entered, and continue to answer remaining questions after that. You may also edit your submission any number of times before the closing time of this session. 
      </div>
    </div>
  </div><tm-loading-spinner>
    <div
      class="loading-container"
    >
      <div
        class="row spinner-border text-primary"
        role="status"
      />
      <div
        class="row text-secondary"
      >
        Loading...
      </div>
    </div>
  </tm-loading-spinner><tm-loading-retry>
    
    
    <tm-loading-spinner>
      <div
        class="loading-container"
      >
        <div
          class="row spinner-border text-primary"
          role="status"
        />
        <div
          class="row text-secondary"
        >
          Loading...
        </div>
      </div>
    </tm-loading-spinner>
    
    
  </tm-loading-retry>
</tm-session-submission-page>
`;

exports[`SessionSubmissionPageComponent should snap with user that is logged in and using session link 1`] = `
<tm-session-submission-page
  FeedbackSessionSubmissionStatus={[Function Object]}
  Intent={[Function Object]}
  authService={[Function AuthService]}
  backendUrl={[Function String]}
  commentService={[Function FeedbackResponseCommentService]}
  courseId={[Function String]}
  document={[Function Document]}
  feedbackQuestionsService={[Function FeedbackQuestionsService]}
  feedbackResponsesService={[Function FeedbackResponsesService]}
  feedbackSessionInstructions=""
  feedbackSessionName={[Function String]}
  feedbackSessionSubmissionStatus={[Function String]}
  feedbackSessionTimezone=""
  feedbackSessionsService={[Function FeedbackSessionsService]}
  formattedSessionClosingTime=""
  formattedSessionOpeningTime=""
  hasFeedbackSessionQuestionsLoadingFailed="false"
  instructorService={[Function InstructorService]}
  intent={[Function String]}
  isFeedbackSessionLoading={[Function Boolean]}
  isFeedbackSessionQuestionResponsesLoading={[Function Boolean]}
  isFeedbackSessionQuestionsLoading={[Function Boolean]}
  isModerationHintExpanded="false"
  isSavingResponses="false"
  isSubmissionFormsDisabled="false"
  loggedInUser={[Function String]}
  moderatedPerson=""
  moderatedQuestionId=""
  navigationService={[Function NavigationService]}
  ngbModal={[Function NgbModal]}
  pageScrollService={[Function PageScrollService]}
  personEmail=""
  personName={[Function String]}
  previewAsPerson=""
  questionSubmissionForms={[Function Array]}
  regKey={[Function String]}
  retryAttempts={[Function Number]}
  route={[Function Object]}
  router={[Function Router]}
  simpleModalService={[Function SimpleModalService]}
  statusMessageService={[Function StatusMessageService]}
  studentService={[Function StudentService]}
  timezoneService={[Function TimezoneService]}
>
  <div
    class="row"
  >
    <div
      class="col-12"
    >
      <div
        class="alert alert-primary"
        role="alert"
      >
        
        <div>
           You are submitting feedback as 
          <mark>
            <b>
              alice
            </b>
          </mark>
          . If you wish to link your Google account (alice) with this user, 
          <a
            href="#"
          >
            click here
          </a>
          . 
        </div>
        
      </div>
    </div>
  </div><div
    class="row"
  >
    <div
      class="col-12"
    >
      <div
        class="alert alert-primary"
        role="alert"
      >
        <i
          class="fas fa-exclamation-circle"
        />
         Note that you can use the Submit button to save responses already entered, and continue to answer remaining questions after that. You may also edit your submission any number of times before the closing time of this session. 
      </div>
    </div>
  </div><tm-loading-spinner>
    <div
      class="loading-container"
    >
      <div
        class="row spinner-border text-primary"
        role="status"
      />
      <div
        class="row text-secondary"
      >
        Loading...
      </div>
    </div>
  </tm-loading-spinner><tm-loading-retry>
    
    
    <tm-loading-spinner>
      <div
        class="loading-container"
      >
        <div
          class="row spinner-border text-primary"
          role="status"
        />
        <div
          class="row text-secondary"
        >
          Loading...
        </div>
      </div>
    </tm-loading-spinner>
    
    
  </tm-loading-retry>
</tm-session-submission-page>
`;

exports[`SessionSubmissionPageComponent should snap with user that is not logged in and using session link 1`] = `
<tm-session-submission-page
  FeedbackSessionSubmissionStatus={[Function Object]}
  Intent={[Function Object]}
  authService={[Function AuthService]}
  backendUrl={[Function String]}
  commentService={[Function FeedbackResponseCommentService]}
  courseId={[Function String]}
  document={[Function Document]}
  feedbackQuestionsService={[Function FeedbackQuestionsService]}
  feedbackResponsesService={[Function FeedbackResponsesService]}
  feedbackSessionInstructions=""
  feedbackSessionName={[Function String]}
  feedbackSessionSubmissionStatus={[Function String]}
  feedbackSessionTimezone=""
  feedbackSessionsService={[Function FeedbackSessionsService]}
  formattedSessionClosingTime=""
  formattedSessionOpeningTime=""
  hasFeedbackSessionQuestionsLoadingFailed="false"
  instructorService={[Function InstructorService]}
  intent={[Function String]}
  isFeedbackSessionLoading={[Function Boolean]}
  isFeedbackSessionQuestionResponsesLoading={[Function Boolean]}
  isFeedbackSessionQuestionsLoading={[Function Boolean]}
  isModerationHintExpanded="false"
  isSavingResponses="false"
  isSubmissionFormsDisabled="false"
  loggedInUser=""
  moderatedPerson=""
  moderatedQuestionId=""
  navigationService={[Function NavigationService]}
  ngbModal={[Function NgbModal]}
  pageScrollService={[Function PageScrollService]}
  personEmail=""
  personName={[Function String]}
  previewAsPerson=""
  questionSubmissionForms={[Function Array]}
  regKey={[Function String]}
  retryAttempts={[Function Number]}
  route={[Function Object]}
  router={[Function Router]}
  simpleModalService={[Function SimpleModalService]}
  statusMessageService={[Function StatusMessageService]}
  studentService={[Function StudentService]}
  timezoneService={[Function TimezoneService]}
>
  <div
    class="row"
  >
    <div
      class="col-12"
    >
      <div
        class="alert alert-primary"
        role="alert"
      >
        
        
        <div>
           You are submitting feedback as 
          <mark>
            <b>
              alice
            </b>
          </mark>
          . You may submit feedback for sessions that are currently open and view results without logging in. To access other features you need to 
          <a
            href="#"
          >
            login using a Google account
          </a>
           (optional). 
        </div>
      </div>
    </div>
  </div><div
    class="row"
  >
    <div
      class="col-12"
    >
      <div
        class="alert alert-primary"
        role="alert"
      >
        <i
          class="fas fa-exclamation-circle"
        />
         Note that you can use the Submit button to save responses already entered, and continue to answer remaining questions after that. You may also edit your submission any number of times before the closing time of this session. 
      </div>
    </div>
  </div><tm-loading-spinner>
    <div
      class="loading-container"
    >
      <div
        class="row spinner-border text-primary"
        role="status"
      />
      <div
        class="row text-secondary"
      >
        Loading...
      </div>
    </div>
  </tm-loading-spinner><tm-loading-retry>
    
    
    <tm-loading-spinner>
      <div
        class="loading-container"
      >
        <div
          class="row spinner-border text-primary"
          role="status"
        />
        <div
          class="row text-secondary"
        >
          Loading...
        </div>
      </div>
    </tm-loading-spinner>
    
    
  </tm-loading-retry>
</tm-session-submission-page>
`;
